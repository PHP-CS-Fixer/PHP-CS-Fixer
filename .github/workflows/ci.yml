name: CI

on:
  - pull_request
  - push

permissions:
  contents: read # to fetch code (actions/checkout)

concurrency:
  group: ci-${{ github.head_ref || github.run_id }} # will be canceled on subsequent pushes in pull requests but not branches
  cancel-in-progress: true

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        include:
          - operating-system: 'ubuntu-20.04'
            php-version: '7.4'
            job-description: 'Fixer with lowest deps'
            run-fixer: 'yes'
            run-phpdoc-to-native-type: 'yes' # should be checked on the lowest supported PHP version
            composer-flags: '--prefer-lowest' # should be checked on the lowest supported PHP version
            execute-flex-with-symfony-version: '^5' # explicit check for Symfony 5.x compatibility

          - operating-system: 'ubuntu-20.04'
            php-version: '7.4'
            job-description: 'tests with lowest deps'
            run-tests: 'yes'
            composer-flags: '--prefer-lowest' # should be checked on the lowest supported PHP version
            execute-flex-with-symfony-version: '^5' # explicit check for Symfony 5.x compatibility

          - operating-system: 'ubuntu-20.04'
            php-version: '7.4'
            job-description: 'Fixer'
            run-fixer: 'yes'
            run-phpdoc-to-native-type: 'yes' # should be checked on the lowest supported PHP version

          - operating-system: 'ubuntu-20.04'
            php-version: '7.4'
            job-description: 'tests'
            run-tests: 'yes'

          - operating-system: 'ubuntu-20.04'
            php-version: '8.0'
            job-description: 'Fixer'
            run-fixer: 'yes'

          - operating-system: 'ubuntu-20.04'
            php-version: '8.0'
            job-description: 'tests'
            run-tests: 'yes'

          - operating-system: 'ubuntu-20.04'
            php-version: '8.1'
            job-description: 'Fixer with Symfony ^6'
            run-fixer: 'yes'
            execute-flex-with-symfony-version: '^6' # explicit check for Symfony 6.x compatibility

          - operating-system: 'ubuntu-20.04'
            php-version: '8.1'
            job-description: 'tests with Symfony ^6'
            run-tests: 'yes'
            execute-flex-with-symfony-version: '^6' # explicit check for Symfony 6.x compatibility

          - operating-system: 'ubuntu-20.04'
            php-version: '8.2'
            job-description: 'Fixer'
            run-fixer: 'yes'

          - operating-system: 'ubuntu-20.04'
            php-version: '8.2'
            job-description: 'Fixer with migration rules'
            run-fixer: 'yes'
            run-migration-rules: 'yes' # should be checked on the highest supported PHP version

          - operating-system: 'ubuntu-20.04'
            php-version: '8.2'
            job-description: 'tests with migration rules'
            run-tests: 'yes'
            run-migration-rules: 'yes' # should be checked on the highest supported PHP version

          - operating-system: 'ubuntu-20.04'
            php-version: '8.2'
            job-description: 'auto-review'
            run-tests: 'yes'
            phpunit-flags: '--group auto-review'

          - operating-system: 'ubuntu-20.04'
            php-version: '8.2'
            job-description: 'tests'
            run-tests: 'yes'

          - operating-system: 'ubuntu-20.04'
            php-version: '8.2'
            job-description: 'code coverage'
            code-coverage: 'yes'

          - operating-system: 'ubuntu-20.04'
            php-version: '8.2'
            job-description: 'deployment check'
            execute-deployment: 'yes'

          - operating-system: 'windows-latest'
            php-version: '8.2'
            job-description: 'Fixer on Windows'
            run-fixer: 'yes'
            FAST_LINT_TEST_CASES: 1 # we need full syntax check on one job at least, no need to do it on additional

          - operating-system: 'windows-latest'
            php-version: '8.2'
            job-description: 'tests on Windows'
            run-tests: 'yes'
            FAST_LINT_TEST_CASES: 1 # we need full syntax check on one job at least, no need to do it on additional systems

          - operating-system: 'macos-latest'
            php-version: '8.2'
            job-description: 'Fixer on macOS'
            run-fixer: 'yes'
            FAST_LINT_TEST_CASES: 1 # we need full syntax check on one job at least, no need to do it on additional systems

          - operating-system: 'macos-latest'
            php-version: '8.2'
            job-description: 'tests on macOS'
            run-tests: 'yes'
            FAST_LINT_TEST_CASES: 1 # we need full syntax check on one job at least, no need to do it on additional

          - operating-system: 'ubuntu-22.04'
            php-version: '8.3'
            job-description: 'Fixer'
            run-fixer: 'yes'
            composer-flags: '--ignore-platform-req=PHP'
            PHP_CS_FIXER_IGNORE_ENV: 1

          - operating-system: 'ubuntu-22.04'
            php-version: '8.3'
            job-description: 'tests'
            run-tests: 'yes'
            composer-flags: '--ignore-platform-req=PHP'
            PHP_CS_FIXER_IGNORE_ENV: 1

    name: PHP ${{ matrix.php-version }} ${{ matrix.job-description }}

    runs-on: ${{ matrix.operating-system }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get code coverage driver
        uses: actions/github-script@v6
        id: code-coverage-driver
        with:
          script: 'return "${{ matrix.code-coverage }}" == "yes" ? "pcov" : "none"'
          result-encoding: string

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: none, dom, json, opcache, simplexml, tokenizer, xml, xmlwriter, zip
          coverage: ${{ steps.code-coverage-driver.outputs.result }}
          tools: flex

      - name: Get Composer cache directory
        id: composer-cache
        shell: bash
        run: echo "dir=$(composer config cache-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: composer-${{ runner.os }}-${{ matrix.php-version }}-${{ hashFiles('**/composer.*') }}-${{ matrix.composer-flags }}
          restore-keys: |
            composer-${{ runner.os }}-${{ matrix.php-version }}-${{ hashFiles('**/composer.*') }}-
            composer-${{ runner.os }}-${{ matrix.php-version }}-
            composer-${{ runner.os }}-
            composer-

      - name: Configure Symfony Flex
        if: matrix.execute-flex-with-symfony-version
        run: composer config extra.symfony.require ${{ matrix.execute-flex-with-symfony-version }}

      - name: Install dependencies
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 5
          retry_wait_seconds: 30
          command: |
            composer update --optimize-autoloader --no-interaction --no-progress --no-scripts ${{ matrix.composer-flags }} # --no-scripts to avoid installing dev-tools for all jobs on CI level
            composer info -D

      # execute migration rules before running tests and self-fixing,
      # so that we know that our codebase is future-ready
      - name: Run PHP CS Fixer with migration rules
        if: matrix.run-migration-rules == 'yes'
        run: php php-cs-fixer fix --config .php-cs-fixer.php-highest.php -q

      - name: Disable time limit for tests when collecting coverage
        if: matrix.code-coverage == 'yes'
        run: sed 's/enforceTimeLimit="true"/enforceTimeLimit="false"/g' phpunit.xml.dist > phpunit.xml

      - name: Run tests
        if: matrix.run-tests == 'yes'
        env:
          PHP_CS_FIXER_IGNORE_ENV: ${{ matrix.PHP_CS_FIXER_IGNORE_ENV }}
          FAST_LINT_TEST_CASES: ${{ matrix.FAST_LINT_TEST_CASES }}
        run: vendor/bin/paraunit run ${{ matrix.phpunit-flags || '--exclude-group auto-review' }}

      - name: Collect code coverage
        if: matrix.code-coverage == 'yes'
        env:
          FAST_LINT_TEST_CASES: 1
        run: vendor/bin/paraunit coverage --testsuite coverage --exclude-group covers-nothing --clover build/logs/clover.xml

      - name: Upload coverage results to Coveralls
        if: matrix.code-coverage == 'yes'
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: php vendor/bin/php-coveralls --verbose

      - name: Run PHP CS Fixer with PHPDoc to type rules
        if: matrix.run-phpdoc-to-native-type == 'yes'
        run: php php-cs-fixer check --diff -v --config .php-cs-fixer.php-lowest.php

      - name: Run PHP CS Fixer
        if: matrix.run-fixer == 'yes'
        env:
          PHP_CS_FIXER_IGNORE_ENV: ${{ matrix.PHP_CS_FIXER_IGNORE_ENV }}
          PHP_CS_FIXER_FUTURE_MODE: 1
        run: php php-cs-fixer check --diff -v

      - name: Execute deployment checks
        if: matrix.execute-deployment == 'yes'
        run: |
          ./dev-tools/build.sh
          PHP_CS_FIXER_TEST_ALLOW_SKIPPING_SMOKE_TESTS=0 vendor/bin/phpunit tests/Smoke/
